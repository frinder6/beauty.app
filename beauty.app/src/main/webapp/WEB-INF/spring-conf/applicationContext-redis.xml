<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- turn on declarative caching -->
    <cache:annotation-driven/>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"/>
        <property name="port" value="${redis.port}"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="${redis.timeout}"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer" value="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        <property name="valueSerializer">
            <bean id="jackson2JsonRedisSerializer"
                  class="org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer">
                <constructor-arg name="type" value="java.lang.Object"/>
            </bean>
        </property>
    </bean>

    <!-- declare Redis Cache Manager -->
    <!-- <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
           c:template-ref="redisTemplate"/>-->

    <bean id="methodCachePointCut" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="redisCacheHandler"/>
        <property name="pattern" value="com.beauty.service.select*,com.beauty.service.query*"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

</beans>